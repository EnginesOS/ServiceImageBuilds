
source s_net { udp(ip(0.0.0.0) port(5140)); };

########################
# Destinations
########################
# First some standard logfile
#
destination d_auth { file("/var/log/rmt/rmt/auth.log"); };
destination d_cron { file("/var/log/rmt/rmt/cron.log"); };
destination d_daemon { file("/var/log/rmt/daemon.log"); };

destination d_kern { file("/var/log/rmt/kern.log"); };
destination d_lpr { file("/var/log/rmt/lpr.log"); };
destination d_mail { file("/var/log/rmt/mail.log"); };
destination d_syslog { file("/var/log/rmt/syslog"); };
destination d_user { file("/var/log/rmt/user.log"); };
destination d_uucp { file("/var/log/rmt/uucp.log"); };

# This files are the log come from the mail subsystem.
#
destination d_mailinfo { file("/var/log/rmt/mail.info"); };
destination d_mailwarn { file("/var/log/rmt/mail.warn"); };
destination d_mailerr { file("/var/log/rmt/mail.err"); };

# Logging for INN news system
#
destination d_newscrit { file("/var/log/rmt/news/news.crit"); };
destination d_newserr { file("/var/log/rmt/news/news.err"); };
destination d_newsnotice { file("/var/log/rmt/news/news.notice"); };

# Some `catch-all' logfiles.
#
destination d_debug { file("/var/log/rmt/debug"); };
destination d_error { file("/var/log/rmt/error"); };
destination d_messages { file("/var/log/rmt/messages"); };

# The root's console.
#


#

# Debian only
destination d_ppp { file("/var/log/rmt/ppp.log"); };

########################
# Filters
########################
# Here's come the filter options. With this rules, we can set which
# message go where.

filter f_dbg { level(debug); };
filter f_info { level(info); };
filter f_notice { level(notice); };
filter f_warn { level(warn); };
filter f_err { level(err); };
filter f_crit { level(crit .. emerg); };

filter f_debug { level(debug) and not facility(auth, authpriv, news, mail); };
filter f_error { level(err .. emerg) ; };
filter f_messages { level(info,notice,warn) and
                    not facility(auth,authpriv,cron,daemon,mail,news); };

filter f_auth { facility(auth, authpriv) and not filter(f_debug); };
filter f_cron { facility(cron) and not filter(f_debug); };
filter f_daemon { facility(daemon) and not filter(f_debug); };
filter f_kern { facility(kern) and not filter(f_debug); };
filter f_lpr { facility(lpr) and not filter(f_debug); };
filter f_local { facility(local0, local1, local3, local4, local5,
                        local6, local7) and not filter(f_debug); };

filter f_mail { facility(mail) and not filter(f_debug); };
filter f_news { facility(news) and not filter(f_debug); };
filter f_syslog3 { not facility(auth, authpriv, mail) and not filter(f_debug); };
filter f_user { facility(user) and not filter(f_debug); };
filter f_uucp { facility(uucp) and not filter(f_debug); };

filter f_cnews { level(notice, err, crit) and facility(news); };
filter f_cother { level(debug, info, notice, warn) or facility(daemon, mail); };

filter f_ppp { facility(local2) and not filter(f_debug); };


########################
# Log paths
########################
log { source(s_net); filter(f_auth); destination(d_auth); };
log { source(s_net); filter(f_cron); destination(d_cron); };
log { source(s_net); filter(f_daemon); destination(d_daemon); };
log { source(s_net); filter(f_kern); destination(d_kern); };
log { source(s_net); filter(f_lpr); destination(d_lpr); };
log { source(s_net); filter(f_syslog3); destination(d_syslog); };
log { source(s_net); filter(f_user); destination(d_user); };
log { source(s_net); filter(f_uucp); destination(d_uucp); };

log { source(s_net); filter(f_mail); destination(d_mail); };
log { source(s_net); filter(f_mail); filter(f_info); destination(d_mailinfo); };
log { source(s_net); filter(f_mail); filter(f_warn); destination(d_mailwarn); };
log { source(s_net); filter(f_mail); filter(f_err); destination(d_mailerr); };

log { source(s_net); filter(f_news); filter(f_crit); destination(d_newscrit); };
log { source(s_net); filter(f_news); filter(f_err); destination(d_newserr); };
log { source(s_net); filter(f_news); filter(f_notice); destination(d_newsnotice); };


log { source(s_net); filter(f_ppp); destination(d_ppp); };
           #log { source(s_net); filter(f_ppp); destination(d_ppp); };

log { source(s_net); filter(f_debug); destination(d_debug); };
log { source(s_net); filter(f_error); destination(d_error); };
log { source(s_net); filter(f_messages); destination(d_messages); };

